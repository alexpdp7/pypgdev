DESCRIPTION

Tools for PostgreSQL database development

pg_docker starts and connects to docker PostgreSQL instances, storing
its data in your local filesystem.

pg_docker_schema_diff gives you a schema diff between to instances' data dirs.

INSTALLATION

We don't have any serious releases of pypgdev. To play around, you can create
a Python virtualenv (so you don't touch your system) and install it with:

$ python3 -m venv pypgdev.venv
$ . pypgdev.venv/bin/activate
$ pip install https://github.com/alexpdp7/pypgdev/archive/master.zip

Then you should be able to use the pg_docker_* commands. You will need to
activate the virtualenv in other shell sessions by reissuing the second
"activate" command.

All changes will be contained in the pypgdev.venv directory, which can
be removed.

DEVELOPMENT INSTALLATION

$ git clone git@github.com:alexpdp7/pypgdev.git
$ mkvirtualenv --python=/usr/bin/python3 pypgdev
$ pip install -e .

USAGE

$ pg_docker ...

TUTORIAL

Start and connect to a new database:

$ pg_docker tutorial
psql (10.0)
Type "help" for help.

postgres=# 

The database data files are right in your system in the tutorial
directory; you can even cp -a the folder and start a new identical and
independent clone of the database to try new changes, for instance.

SCHEMA DIFF

$ pg_docker foo
# create table foo ( bar serial primary key );
# \q

$ cp -r foo bar

$ pg_docker bar
# alter table foo add column baz text not null;
# \q

$ pg_docker_schema_diff foo bar
[...]
  CREATE TABLE foo (
!     bar integer NOT NULL
  );
[...]
  CREATE TABLE foo (
!     bar integer NOT NULL,
!     baz text NOT NULL
  );
[...]
