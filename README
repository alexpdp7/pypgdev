DESCRIPTION

Tools for PostgreSQL database development

pg_docker and pg_docker_psql start and connect to docker PostgreSQL instances,
storing their data in your local filesystem.

pg_docker_schema_diff gives you a schema diff between to instances' data dirs.

INSTALLATION

We don't have any serious releases of pypgdev. To play around, you can create
a Python virtualenv (so you don't touch your system) and install it with:

$ python3 -m venv pypgdev.venv
$ . pypgdev.venv/bin/activate
$ pip install https://github.com/alexpdp7/pypgdev/archive/master.zip

Then you should be able to use the pg_docker_* commands. You will need to
activate the virtualenv in other shell sessions by reissuing the second
"activate" command.

All changes will be contained in the pypgdev.venv directory, which can
be removed.

DEVELOPMENT INSTALLATION

$ git clone git@github.com:alexpdp7/pypgdev.git
$ mkvirtualenv --python=/usr/bin/python3 pypgdev
$ pip install -e .

USAGE

$ pg_docker ...
$ pg_docker_psql ...

TUTORIAL

Start a new database:

$ pg_docker tmp tutorial
The files belonging to this database system will be owned by user "alex".
...
2017-10-21 10:34:45.713 UTC [1] LOG:  database system is ready to accept connections

This will start a new database in a container named tutorial, storing its data
in the tmp folder. The database will run in the foreground until you stop it
with CTRL+C.

If you switch to another console and do:

$ pg_docker_psql tutorial
psql (10.0)
Type "help" for help.

postgres=# 

You will get a psql instance connected to the tutorial container database.

The database data files are right in your system; you can even cp -a the
folder and start a new identical and independent clone of the database to
try new changes, for instance.

SCHEMA DIFF

$ pg_docker foo foo

switch to another terminal:

$ pg_docker_psql foo
# create table foo ( bar serial primary key );
# \q

CTRL+c the pg_docker command

$ cp -r foo bar
$ pg_docker bar bar

switch to another terminal:

$ pg_docker_psql bar
# alter table foo add column baz text not null;
# \q

CTRL+c the pg_docker command and:

$ pg_docker_schema_diff foo bar
[...]
  CREATE TABLE foo (
!     bar integer NOT NULL
  );
[...]
  CREATE TABLE foo (
!     bar integer NOT NULL,
!     baz text NOT NULL
  );
[...]
